<launch>
  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="worlds/empty.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="recording" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find third_arm)/urdf/third_arm_gazebo.urdf'" />
  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model wrta -param robot_description"/>
  <!-- <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-file $(find third_arm)/urdf/third_arm_test.urdf -urdf -z 1 -model third_arm_5dof" /> -->
  <!-- <rosparam command="load"
            file="$(find third_arm)/config/wrta_controllers.yaml"
            ns="/wrta"/> -->
</launch>